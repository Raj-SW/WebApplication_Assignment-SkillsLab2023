@{
    ViewBag.Title = "CreateTraining";
    Layout = null;
}

<link rel="stylesheet" href="~/Content/Styling/AdminCreateTrainingStyling.css">
<link href="~/Content/toastr.css" rel="stylesheet" />
<script src="~/Scripts/toastr.js"></script>

<div class="create-training-container">
    <form id="createTrainingForm" class="createTrainingForm">

        <div class="row">
            <h3>Create Training</h3>
            <div class="training-name-inputs col-md-6">
                <label for="trainingName">Training Name:</label>
                <input type="text" id="trainingName">
            </div>
            <div class="training-description-inputs col-md-6">
                <label for="trainingDescription">Training Description:</label>
                <textarea id="trainingDescription"></textarea>
            </div>
        </div>
        <div class="row">
            <div class="training-status-inputs col-md-6">
                <label for="trainingStatus">Training Status:</label>
                <!-- Populate the dropdown with the list of training statuses -->
                <select id="trainingStatus">
                    @foreach (var status in ViewBag.ListOfTrainingStatus)
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </div>
            <div class="department-priority-inputs col-md-6">
                <label for="departmentPriority">Department Priority:</label>
                <!-- Populate the dropdown with the list of departments -->
                <select id="departmentPriority">
                    @foreach (var department in ViewBag.ListOfDepartments)
                    {
                        <option value="@department.DepartmentId">@department.DepartmentName</option>
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <div class="seats-total-inputs col-md-6">
                <label for="seatsTotal">Seats Total:</label>
                <input type="number" id="seatsTotal" min="1">
            </div>
            <div class="registration-deadline-inputs col-md-6">
                <label for="registrationDeadline">Registration Deadline:</label>
                <input type="date" id="registrationDeadline">
            </div>
        </div>
        <div class="row">
            <div class="coach-inputs col-md-6">
                <label for="coach">Coach:</label>
                <select id="coach">
                    @foreach (var manager in ViewBag.ListOfManagers)
                    {
                        <option value="@manager.UserId">@manager.UserFirstName @manager.UserLastName</option>
                    }
                </select>
            </div>
        </div>
        <div class="col-md-6 button-container">
            <div class=" inner-button-container">
                <button class="btn btn-primary col-md-5" type="button" id="addPrerequisite">Add Prerequisite</button>
            </div>
            <div class="">
                <button class="btn btn-primary col-md-5" type="submit">Create Training</button>
            </div>
        </div>

    </form>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('createTrainingForm');
    const addPrerequisiteBtn = document.getElementById('addPrerequisite');
    let prerequisiteCount = 0;
    const listOfPrerequisites = @Html.Raw(Json.Encode(ViewBag.ListOfPrerequisites));
    addPrerequisiteBtn.addEventListener('click', function () {
        prerequisiteCount++;
        let prerequisiteContainer = document.querySelector('.prerequisite-container');
        if (!prerequisiteContainer) {
            prerequisiteContainer = document.createElement('div');
            prerequisiteContainer.className = 'row add-prerequisite col-md-6';
            form.insertBefore(prerequisiteContainer, form.lastElementChild);
        }
        const select = document.createElement('select');
        select.id = `prerequisiteDropdown${prerequisiteCount}`;
        select.className = 'prerequisite-dropdown';
        prerequisiteContainer.appendChild(select);

        listOfPrerequisites.forEach(prerequisite => {
            const option = document.createElement('option');
            option.value = prerequisite.PrerequisiteId;
            option.innerText = prerequisite.PrerequisiteDescription;
            select.appendChild(option);
        });
        const removePrerequisiteBtn = document.createElement('button');
        removePrerequisiteBtn.innerText = 'Remove Prerequisite';
        removePrerequisiteBtn.className = 'btn btn-danger ';
        removePrerequisiteBtn.addEventListener('click', function () {
            prerequisiteContainer.removeChild(select);
            prerequisiteContainer.removeChild(removePrerequisiteBtn);
            prerequisiteCount--;
        });
        prerequisiteContainer.appendChild(removePrerequisiteBtn);
    });
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            if (!validateForm()) {
                return;
            }
        const selectedPrerequisites = [];
        document.querySelectorAll('.prerequisite-dropdown').forEach(dropdown => {
            selectedPrerequisites.push(dropdown.value);
        });
        const trainingData = {
            trainingName: document.getElementById('trainingName').value,
            trainingDescription: document.getElementById('trainingDescription').value,
            trainingStatus: document.getElementById('trainingStatus').value,
            departmentPriority: document.getElementById('departmentPriority').value,
            totalSeats: document.getElementById('seatsTotal').value,
            registrationDeadline: document.getElementById('registrationDeadline').value,
            coach: document.getElementById('coach').value,
            prerequisites: selectedPrerequisites,
        };
        console.log(trainingData);
        fetch('/Training/CreateTrainingAsync', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(trainingData),
        })
            .then(response => response.json())
            .then(data => {
                if (data.result) {
                    toastr.success(data.message, '', { timeOut: 1000, });
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                    return true;
                } else {
                    toastr.error(data.message, '', { timeOut: 1000, });
                    return false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    });
    });
    function validateForm() {
        let isValid = true;
        const requiredFields = ['trainingName', 'trainingDescription', 'trainingStatus', 'departmentPriority', 'seatsTotal', 'registrationDeadline', 'coach'];
        requiredFields.forEach(field => {
            const input = document.getElementById(field);
            if (!input.value.trim()) {
                toastr.error(`Please enter ${field.replace(/([A-Z])/g, ' $1').trim()}`);
                isValid = false;
            }
        });

        return isValid;
    }
</script>
